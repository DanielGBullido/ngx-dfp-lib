{"version":3,"sources":["ng://ngx-dfp/service/injection_token.ts","ng://ngx-dfp/service/idle.service.ts","ng://ngx-dfp/service/http-error.service.ts","node_modules/tslib/tslib.es6.js","ng://ngx-dfp/service/parse-duration.service.ts","ng://ngx-dfp/service/script-injector.service.ts","ng://ngx-dfp/class/dfp-errors.class.ts","ng://ngx-dfp/class/dfp-config.class.ts","ng://ngx-dfp/service/dfp.service.ts","ng://ngx-dfp/service/dfp-id-generator.service.ts","ng://ngx-dfp/service/dfp-refresh.service.ts","ng://ngx-dfp/directive/dfp-ad.directive.ts","ng://ngx-dfp/directive/dfp-ad-responsive.directive.ts","ng://ngx-dfp/directive/dfp-responsive.directive.ts","ng://ngx-dfp/directive/dfp-size.directive.ts","ng://ngx-dfp/directive/dfp-targeting.directive.ts","ng://ngx-dfp/directive/dfp-exclusion.directive.ts","ng://ngx-dfp/directive/dfp-value.directive.ts","ng://ngx-dfp/directive/dfp-audience-pixel.directive.ts","ng://ngx-dfp/dfp.module.ts"],"names":["DFP_CONFIG","InjectionToken","IdleService","platformId","zone","win","isPlatformBrowser","window","requestIdleCallback","this","fun","runOutsideAngular","setTimeout","prototype","request","Injectable","Object","decorators","type","Inject","args","PLATFORM_ID","NgZone","HttpErrorService","code","httpError","response","message","console","log","status","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","DFPDurationError","_super","interval","tslib_1.__extends","Error","ParseDurationService","convertToMilliseconds","time","unit","assert","test","convert","match","parseFloat","parseDuration","undefined","TypeError","ScriptInjectorService","completeURL","url","document","location","protocol","createScript","script","createElement","async","src","promiseScript","promise","Promise","resolve","reject","onload","onerror","path","loaded","catch","_this","injectScript","head","querySelector","appendChild","scriptInjector","DFPIncompleteError","directiveName","missingName","isAttribute","DfpConfig","DFPTypeError","attributeName","wrongValue","expectedType","DFPMissingParentError","parents","_i","parentMessage","isArray","map","slice","join","DFPConfigurationError","DfpService","idleLoad","config","googletag","dfpConfig","cmd","setup","loadGPT","loadScript","then","key","addSafeFrameConfig","pubads","safeFrameConfig","setSafeFrameConfig","addTargeting","globalTargeting","setTargeting","addLocation","setLocation","apply","addPPID","ppid","setPublisherProvidedId","enableVideoAds","personalizedAds","setRequestNonPersonalizedAds","collapseIfEmpty","collapseEmptyDivs","disableInitialLoad","setForceSafeFrame","forceSafeFrame","setCentering","centering","enableAsyncRendering","singleRequestMode","enableServices","hasLoaded","defineTask","task","Optional","DfpIDGeneratorService","generateID","id","Math","random","toString","generatedIDs","dfpIDGenerator","element","tagName","toLowerCase","isTaken","isUnique","DFPRefreshError","DfpRefreshService","inject","EventEmitter","slotRefresh","slot","refreshInterval","initRefresh","deferred","from","toPromise","hasSlotInterval","cancelInterval","addSlotInterval","refreshSlots","singleRequest","closed","unsubscribe","timer","subscribe","enableSingleRequest","forEach","s","display","getSlotElementId","refresh","intervals","slotIntervalKey","tasks","parsedInterval","validateInterval","doc","get","DOCUMENT","hiddenCheck","getElementById","refreshEvent","emit","getSlotId","getDomId","milliseconds","beforeParsing","warn","getComputedStyle","parentElement","Injector","DfpAdDirective","elementRef","dfp","dfpRefresh","router","afterRefresh","onSameNavigation","events","pipe","filter","event","NavigationEnd","refreshContent","ngOnInit","nativeElement","ngAfterViewInit","defineSlot","ngOnDestroy","destroySlots","setResponsiveMapping","ad","getState","responsiveMapping","sizeMapping","mapping","addSize","viewportSize","adSizes","defineSizeMapping","build","adUnit","sizes","set","clickUrl","setClickUrl","setCollapseEmptyDiv","JSON","parse","renderEnded","googleSlotEvent","data","targetings","targeting","values","exclusions","exclusion","setCategoryExclusion","scripts","addService","companionAds","checkValid","defineProperty","freeze","size","addResponsiveMapping","addExclusion","addScript","Directive","selector","ElementRef","Router","Input","Output","DfpAdResponsiveDirective","normalizeIframe","isHidden","iframe","getIframe","iframeWidth","width","winWidth","innerWidth","state","max","setAttribute","forwardRef","HostListener","DfpResponsiveDirective","val","viewport","DfpSizeDirective","resp","target","innerText","height","trim","DfpTargetingDirective","v","addValue","ngAfterContentInit","find","item","DfpExclusionDirective","DfpValueDirective","DfpAudiencePixelDirective","pixel","segmentId","border","style","visibility","append","DIRECTIVES","SERVICES","DfpModule","forRoot","ngModule","providers","provide","useValue","NgModule","imports","declarations","exports"],"mappings":"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","sourcesContent":["import { InjectionToken } from '@angular/core';\n\nimport { DfpConfig  } from '../class';\n\nexport const DFP_CONFIG = new InjectionToken<DfpConfig>('dfpConfig');\n","import { Injectable, NgZone, Inject, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable()\nexport class IdleService {\n\n  private requestIdleCallback: any;\n\n  constructor(\n    @Inject(PLATFORM_ID) platformId: Object,\n    zone: NgZone\n  ) {\n    const win: any = isPlatformBrowser(platformId) ? window : {};\n    if (win.requestIdleCallback) {\n      this.requestIdleCallback = (fun) => {\n        return win.requestIdleCallback(fun);\n      };\n    } else {\n      this.requestIdleCallback = (fun) => {\n        return zone.runOutsideAngular(() => win.setTimeout(fun, 50));\n      };\n    }\n  }\n\n  request(fun) {\n    this.requestIdleCallback(fun);\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class HttpErrorService {\n\n  httpError(response, message) {\n    console.log(`Error (${response.status}) ${message ? message : ''}`);\n  }\n\n  isErrorCode = function (code) {\n    if (typeof code === 'number') {\n      return !(code >= 200 && code < 300);\n    }\n    return code[0] !== '2';\n  };\n\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\n\nclass DFPDurationError extends Error {\n  constructor(interval) {\n    super(`Invalid interval: '${interval}'ls`);\n  }\n}\n\n@Injectable()\nexport class ParseDurationService {\n\n  convertToMilliseconds(time, unit) {\n    console.assert(/^(m?s|min|h)$/g.test(unit));\n\n    if (unit === 'ms') { return time; }\n    if (unit === 's') { return time * 1000; }\n    if (unit === 'min') { return time * 60 * 1000; }\n\n    return time * 60 * 60 * 1000;\n  }\n\n  convert(match) {\n    const time = parseFloat(match[1]);\n\n    if (match.length === 2) { return time; }\n\n    return this.convertToMilliseconds(time, match[2]);\n  }\n\n  parseDuration(interval) {\n\n    if (interval === undefined || interval === null) {\n      throw new DFPDurationError(interval);\n    }\n\n    if (typeof interval === 'number') {\n      return interval;\n    }\n\n    if (typeof interval !== 'string') {\n      throw new TypeError(`'${interval}' must be of number or string type`);\n    }\n\n    const match = interval.match(/((?:\\d+)?.?\\d+)(m?s|min|h)?/);\n\n    if (!match) {\n      throw new DFPDurationError(interval);\n    }\n\n    return this.convert(match);\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HttpErrorService } from './http-error.service';\n\n@Injectable()\nexport class ScriptInjectorService {\n\n  constructor(private httpError: HttpErrorService) { }\n\n  private completeURL(url) {\n    const ssl = document.location.protocol === 'https:';\n    return (ssl ? 'https:' : 'http:') + url;\n  }\n\n  private createScript(url) {\n    const script = document.createElement('script');\n\n    script.async = true;\n    script.type = 'text/javascript';\n    script.src = this.completeURL(url);\n\n    return script;\n  }\n\n  private promiseScript(script, url) {\n    const promise = new Promise((resolve, reject) => {\n      script.onload = () => {\n        resolve(script);\n      };\n      script.onerror = () => {\n        reject({\n          path: url,\n          loaded: false\n        });\n      };\n    });\n\n    promise.catch(response => {\n      this.httpError.httpError({ status: 400 }, `loading script \"${url}\"`);\n    });\n\n    return promise;\n  }\n\n  injectScript(script) {\n    const head = document.head || document.querySelector('head');\n    head.appendChild(script);\n  }\n\n  scriptInjector(url) {\n    const script = this.createScript(url);\n    this.injectScript(script);\n    return this.promiseScript(script, url);\n  }\n\n}\n","\n\nexport class DFPIncompleteError extends Error {\n    constructor(directiveName, missingName, isAttribute?) {\n        super(`Incomplete definition of '${directiveName}': ` +\n            `Missing ${isAttribute ? 'attribute' : 'child directive'} ` +\n            `'${missingName}'.`);\n    }\n}\n\nexport class DFPTypeError extends Error {\n    constructor(directiveName, attributeName, wrongValue, expectedType) {\n        super(\n            `Wrong type for attribute '${attributeName}' on ` +\n            `directive '${directiveName}': Expected ${expectedType}` +\n            `, got ${typeof wrongValue}`\n        );\n    }\n}\n\nexport class DFPMissingParentError extends Error {\n    constructor(directiveName, ...parents) {\n        console.assert(parents && parents.length > 0);\n        if (Array.isArray(parents[0])) {\n            parents = parents[0];\n        }\n\n        let parentMessage;\n        if (parents.length > 1) {\n            parents = parents.map(p => `'${p}'`);\n            parentMessage = ', which must be ';\n            parentMessage += parents.slice(0, -1).join(', ');\n            parentMessage += ` or ${parents[parents.length - 1]}`;\n        } else {\n            parentMessage = ` '${parents[0]}'`;\n        }\n\n        super(\n            `Invalid use of '${directiveName}' directive. ` +\n            `Missing parent directive${parentMessage}.`\n        );\n    }\n}\n","export class DfpTargeting {\n  [key: string]: Array<string>;\n}\n\nexport class DfpConfig {\n  idleLoad?: boolean;\n  onSameNavigation?: 'refresh' | 'ignore';\n  singleRequestMode?: boolean;\n  enableVideoAds?: boolean;\n  personalizedAds?: boolean;\n  collapseIfEmpty?: boolean;\n  centering?: boolean;\n  location?: string | Array<string>;\n  ppid?: string;\n  globalTargeting?: DfpTargeting;\n  forceSafeFrame?: boolean;\n  safeFrameConfig?: object;\n  loadGPT?: boolean;\n}\n","import { Injectable, Optional, PLATFORM_ID, Inject } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport { DFP_CONFIG } from './injection_token';\nimport { DfpConfig } from '../class';\nimport { IdleService } from './idle.service';\nimport { ScriptInjectorService } from './script-injector.service';\n\nexport const GPT_LIBRARY_URL = '//www.googletagservices.com/tag/js/gpt.js';\n\nclass DFPConfigurationError extends Error { }\n\n@Injectable()\nexport class DfpService {\n\n  private enableVideoAds = false;\n\n  private personalizedAds = true;\n\n  private collapseIfEmpty = true;\n\n  private centering = false;\n\n  private location = null;\n\n  private ppid = null;\n\n  private globalTargeting = null;\n\n  private forceSafeFrame = false;\n\n  private safeFrameConfig = null;\n\n  private loadGPT = true;\n\n  private loaded = false;\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: Object,\n    @Optional() idleLoad: IdleService,\n    @Inject(DFP_CONFIG) private config: DfpConfig,\n    private scriptInjector: ScriptInjectorService\n  ) {\n    if (isPlatformBrowser(this.platformId)) {\n      const win: any = window,\n        googletag = win.googletag || {};\n\n      this.dfpConfig();\n\n      googletag.cmd = googletag.cmd || [];\n      googletag.cmd.push(() => {\n        this.setup();\n      });\n      win.googletag = googletag;\n\n      if (this.loadGPT) {\n        const loadScript = () => {\n          this.scriptInjector.scriptInjector(GPT_LIBRARY_URL).then((script) => {\n            this.loaded = true;\n          });\n        };\n        if (idleLoad) {\n          idleLoad.request(loadScript);\n        } else {\n          loadScript();\n        }\n      }\n    }\n  }\n\n  private dfpConfig() {\n    for (const key in this.config) {\n      if (this.hasOwnProperty(key)) {\n        this[key] = this.config[key];\n      }\n    }\n  }\n\n  private addSafeFrameConfig(pubads) {\n    if (!this.safeFrameConfig) { return false; }\n    if (typeof this.safeFrameConfig !== 'object') {\n      throw new DFPConfigurationError('FrameConfig must be an object');\n    }\n    pubads.setSafeFrameConfig(this.safeFrameConfig);\n  }\n\n  private addTargeting(pubads) {\n    if (!this.globalTargeting) { return false; }\n    if (typeof this.globalTargeting !== 'object') {\n      throw new DFPConfigurationError('Targeting must be an object');\n    }\n\n    for (const key in this.globalTargeting) {\n      if (this.globalTargeting.hasOwnProperty(key)) {\n        pubads.setTargeting(key, this.globalTargeting[key]);\n      }\n    }\n  }\n\n  private addLocation(pubads) {\n    if (!this.location) { return false; }\n\n    if (typeof this.location === 'string') {\n      pubads.setLocation(this.location);\n      return;\n    }\n\n    if (!Array.isArray(this.location)) {\n      throw new DFPConfigurationError('Location must be an ' +\n        'array or string');\n    }\n\n    pubads.setLocation.apply(pubads, this.location);\n  }\n\n  private addPPID(pubads) {\n    if (!this.ppid) { return false; }\n    if (typeof this.ppid !== 'string') {\n      throw new DFPConfigurationError('PPID must be a string');\n    }\n\n    pubads.setPublisherProvidedId(this.ppid);\n  }\n\n  private setup() {\n    const win: any = window,\n      googletag = win.googletag,\n      pubads = googletag.pubads();\n\n    if (this.enableVideoAds) {\n      pubads.enableVideoAds();\n    }\n\n    // personalizedAds is default\n    if (this.personalizedAds === false) {\n      pubads.setRequestNonPersonalizedAds(1);\n    }\n\n    if (this.collapseIfEmpty) {\n      pubads.collapseEmptyDivs();\n    }\n\n    // We always refresh ourselves\n    pubads.disableInitialLoad();\n\n    pubads.setForceSafeFrame(this.forceSafeFrame);\n    pubads.setCentering(this.centering);\n\n    this.addLocation(pubads);\n    this.addPPID(pubads);\n    this.addTargeting(pubads);\n    this.addSafeFrameConfig(pubads);\n\n    // pubads.enableSyncRendering();\n    pubads.enableAsyncRendering();\n\n    if (this.config.singleRequestMode !== true) {\n      if (this.config.enableVideoAds) {\n        pubads.enableVideoAds();\n      }\n      googletag.enableServices();\n    }\n\n  }\n\n  hasLoaded() {\n    return this.loaded;\n  }\n\n  defineTask(task) {\n    if (isPlatformBrowser(this.platformId)) {\n      const win: any = window,\n        googletag = win.googletag;\n      googletag.cmd.push(task);\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class DfpIDGeneratorService {\n\n  private generatedIDs = {};\n\n  generateID(type = 'dfp-ad') {\n    let id = null;\n\n    do {\n      const number = Math.random().toString().slice(2);\n      id = type + '-' + number;\n    } while (id in this.generatedIDs);\n\n    this.generatedIDs[id] = true;\n\n    return id;\n  }\n\n  dfpIDGenerator(element: HTMLElement) {\n    if (element && element.id && !(element.id in this.generatedIDs)) {\n      return element.id;\n    }\n\n    const id = this.generateID(element.tagName.toLowerCase());\n    if (element) { element.id = id; }\n\n    return id;\n  }\n\n  isTaken(id) {\n    return id in this.generatedIDs;\n  }\n\n  isUnique(id) {\n    return !this.isTaken(id);\n  }\n\n}\n","import { Injectable, EventEmitter, Optional, Injector, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\nimport { Subscription, timer, from } from 'rxjs';\n\nimport { DfpConfig } from '../class';\nimport { DFP_CONFIG } from './injection_token';\nimport { ParseDurationService } from './parse-duration.service';\n\nclass DFPRefreshError extends Error { }\n\ndeclare var googletag;\n\n@Injectable()\nexport class DfpRefreshService {\n\n  refreshEvent: EventEmitter<any> = new EventEmitter();\n  private refreshSlots = [];\n  private singleRequest: Subscription;\n  private intervals = {};\n\n  constructor(\n    @Optional() @Inject(DFP_CONFIG)\n    private config: DfpConfig,\n    private inject: Injector,\n    private parseDuration: ParseDurationService\n  ) { }\n\n  slotRefresh(slot, refreshInterval?, initRefresh = false) {\n    const deferred: Promise<any> = from([slot]).toPromise(),\n      task = { slot: slot, deferred: deferred };\n\n    deferred.then(() => {\n      if (this.hasSlotInterval(slot)) {\n        this.cancelInterval(slot);\n      }\n      if (refreshInterval) {\n        this.addSlotInterval(task, refreshInterval);\n      }\n    });\n\n    if (this.config.singleRequestMode === true && initRefresh) {\n      // Use a timer to handle refresh of a single request mode\n      this.refreshSlots.push(slot);\n      if (this.singleRequest && !this.singleRequest.closed) {\n        this.singleRequest.unsubscribe();\n      }\n      this.singleRequest = timer(100).subscribe(() => {\n        const pubads = googletag.pubads();\n        pubads.enableSingleRequest();\n        googletag.enableServices();\n        this.refreshSlots.forEach(s => {\n          googletag.display(s.getSlotElementId());\n        });\n        pubads.refresh(this.refreshSlots);\n        this.refreshSlots = [];\n      });\n    } else {\n      googletag.display(slot.getSlotElementId());\n      this.refresh([task]);\n    }\n\n    return deferred;\n  }\n\n  cancelInterval(slot) {\n    if (!this.hasSlotInterval(slot)) {\n      throw new DFPRefreshError('No interval for given slot');\n    }\n\n    const interval: Subscription = this.intervals[this.slotIntervalKey(slot)];\n    interval.unsubscribe();\n    delete this.intervals[slot];\n\n    return this;\n  }\n\n  private hasSlotInterval(slot) {\n    return this.slotIntervalKey(slot) in this.intervals;\n  }\n\n  private refresh(tasks?) {\n    if (tasks === undefined) {\n      googletag.cmd.push(() => {\n        googletag.pubads().refresh();\n      });\n      return;\n    }\n\n    if (tasks.length === 0) { return false; }\n\n    googletag.cmd.push(() => {\n      googletag.pubads().refresh(tasks.map(task => task.slot));\n      tasks.forEach(task => {\n        Promise.resolve(task.slot);\n      });\n    });\n  }\n\n  private addSlotInterval(task, interval) {\n    const parsedInterval = this.parseDuration.parseDuration(interval);\n    this.validateInterval(parsedInterval, interval);\n\n    const refresh = timer(parsedInterval, parsedInterval).subscribe(() => {\n      const doc = this.inject.get(DOCUMENT);\n      if (!this.hiddenCheck(doc.getElementById(task.slot.getSlotElementId()))) {\n        this.refresh([task]);\n        this.refreshEvent.emit(task.slot);\n      }\n    });\n\n    this.intervals[this.slotIntervalKey(task.slot)] = refresh;\n\n    return refresh;\n  }\n\n  private slotIntervalKey(slot) {\n    return slot.getSlotId().getDomId();\n  }\n\n  private validateInterval(milliseconds, beforeParsing) {\n    if (milliseconds < 1000) {\n      console.warn('Careful: ${beforeParsing} is quite a low interval!');\n    }\n  }\n\n  hiddenCheck(element: Element) {\n    if (typeof (window) !== 'undefined' && element != null) {\n      const css = window.getComputedStyle(element);\n      if (css.display === 'none') {\n        return true;\n      } else if (element.parentElement) {\n        return this.hiddenCheck(element.parentElement);\n      }\n    }\n    return false;\n  }\n}\n","import {\n  Directive, ElementRef,\n  Input, Output, EventEmitter,\n  OnInit, AfterViewInit, OnDestroy, Inject, PLATFORM_ID, Optional\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { Router, NavigationEnd } from '@angular/router';\n\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { DfpService, } from '../service/dfp.service';\nimport { DfpIDGeneratorService, } from '../service/dfp-id-generator.service';\nimport { DfpRefreshService } from '../service/dfp-refresh.service';\n\nimport { DFPIncompleteError, GoogleSlot, DfpConfig } from '../class';\nimport { DFP_CONFIG } from '../service/injection_token';\n\ndeclare var googletag;\n\nexport class DfpRefreshEvent {\n  type: string;\n  slot: any;\n  data?: any;\n}\n\n@Directive({\n  selector: 'dfp-ad'\n})\nexport class DfpAdDirective implements OnInit, AfterViewInit, OnDestroy {\n\n  @Input() adUnit: string;\n  @Input() clickUrl: string;\n  @Input() forceSafeFrame: boolean;\n  @Input() safeFrameConfig: string;\n  @Input() refresh: string;\n  @Input() personalizedAds: boolean = this.config.personalizedAds;\n  @Input() collapseIfEmpty: boolean;\n\n  @Output() afterRefresh: EventEmitter<DfpRefreshEvent> = new EventEmitter();\n\n  private sizes = [];\n\n  private responsiveMapping = [];\n\n  private targetings = [];\n\n  private exclusions = [];\n\n  private scripts = [];\n\n  private slot: GoogleSlot;\n\n  private onSameNavigation: Subscription;\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: Object,\n    private elementRef: ElementRef,\n    private dfp: DfpService,\n    private dfpIDGenerator: DfpIDGeneratorService,\n    private dfpRefresh: DfpRefreshService,\n    @Inject(DFP_CONFIG) private config: DfpConfig,\n    @Optional() router: Router\n  ) {\n    if (isPlatformBrowser(this.platformId)) {\n      this.dfpRefresh.refreshEvent.subscribe(slot => {\n        if (slot === this.slot) {\n          this.afterRefresh.emit({ type: 'refresh', slot: slot });\n        }\n      });\n      if (router) {\n        this.onSameNavigation = router.events.pipe(filter(event => event instanceof NavigationEnd))\n          .subscribe((event: NavigationEnd) => {\n            if (this.slot && !this.refresh && this.config.onSameNavigation === 'refresh') {\n              this.refreshContent.call(this);\n            }\n          });\n      }\n    }\n  }\n\n  ngOnInit() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.dfpIDGenerator.dfpIDGenerator(this.elementRef.nativeElement);\n    }\n  }\n\n  ngAfterViewInit() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.dfp.defineTask(() => {\n        this.defineSlot();\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.slot) {\n      googletag.destroySlots([this.slot]);\n    }\n    if (this.onSameNavigation) {\n      this.onSameNavigation.unsubscribe();\n    }\n  }\n\n  private setResponsiveMapping(slot) {\n    const ad = this.getState();\n\n    if (ad.responsiveMapping.length === 0) {\n      return;\n    }\n\n    const sizeMapping = googletag.sizeMapping();\n\n    ad.responsiveMapping.forEach(mapping => {\n      sizeMapping.addSize(mapping.viewportSize, mapping.adSizes);\n    });\n\n    slot.defineSizeMapping(sizeMapping.build());\n  }\n\n  private defineSlot() {\n    const ad = this.getState(),\n      element = this.elementRef.nativeElement;\n\n    this.slot = googletag.defineSlot(ad.adUnit, ad.sizes, element.id);\n\n    if (this.forceSafeFrame !== undefined && ad.forceSafeFrame === !this.config.forceSafeFrame) {\n      this.slot.setForceSafeFrame(ad.forceSafeFrame);\n    }\n\n    if (this.personalizedAds === false) {\n      this.slot.set('requestNonPersonalizedAds', 1);\n      googletag.pubads().setRequestNonPersonalizedAds(1);\n    }\n\n    if (ad.clickUrl) {\n      this.slot.setClickUrl(ad.clickUrl);\n    }\n\n    if (ad.collapseIfEmpty) {\n      this.slot.setCollapseEmptyDiv(true, true);\n    }\n\n    if (ad.safeFrameConfig) {\n      this.slot.setSafeFrameConfig(\n        (JSON.parse(ad.safeFrameConfig))\n      );\n    }\n\n    this.slot.renderEnded = (googleSlotEvent: IArguments) => {\n      this.afterRefresh.emit({ type: 'renderEnded', slot: this.slot, data: googleSlotEvent });\n    };\n\n    this.setResponsiveMapping(this.slot);\n\n    ad.targetings.forEach(targeting => {\n      this.slot.setTargeting(targeting.key, targeting.values);\n    });\n\n    ad.exclusions.forEach(exclusion => {\n      this.slot.setCategoryExclusion(exclusion);\n    });\n\n    ad.scripts.forEach(script => { script(this.slot); });\n\n    if (this.config.enableVideoAds) {\n      this.slot.addService(googletag.companionAds());\n    }\n\n    this.slot.addService(googletag.pubads());\n\n    this.refreshContent();\n  }\n\n  private refreshContent() {\n    this.dfpRefresh.slotRefresh(this.slot, this.refresh, true).then(slot => {\n      this.afterRefresh.emit({ type: 'init', slot: slot });\n    });\n  }\n\n  checkValid() {\n    if (this.sizes.length === 0) {\n      throw new DFPIncompleteError('dfp-ad', 'dfp-size');\n    }\n    if (!this.adUnit) {\n      throw new DFPIncompleteError('dfp-ad', 'ad-unit', true);\n    }\n  }\n\n  get isHidden() {\n    return this.dfpRefresh.hiddenCheck(this.elementRef.nativeElement);\n  }\n\n  getState() {\n    this.checkValid();\n    return Object.freeze({\n      sizes: this.sizes,\n      responsiveMapping: this.responsiveMapping,\n      targetings: this.targetings,\n      exclusions: this.exclusions,\n      adUnit: this.adUnit,\n      forceSafeFrame: this.forceSafeFrame === true,\n      safeFrameConfig: this.safeFrameConfig,\n      clickUrl: this.clickUrl,\n      refresh: this.refresh,\n      personalizedAds: this.personalizedAds === this.config.personalizedAds,\n      scripts: this.scripts,\n      collapseIfEmpty: this.collapseIfEmpty === true\n    });\n  }\n\n  addSize(size) {\n    this.sizes.push(size);\n  }\n\n  addResponsiveMapping(mapping) {\n    this.responsiveMapping.push(mapping);\n  }\n\n  addTargeting(targeting) {\n    this.targetings.push(targeting);\n  }\n\n  addExclusion(exclusion) {\n    this.exclusions.push(exclusion);\n  }\n\n  addScript(script) {\n    this.scripts.push(script);\n  }\n\n}\n","import {\n    Directive, ElementRef,\n    Inject, forwardRef,\n    HostListener\n} from '@angular/core';\n\nimport { DfpAdDirective } from './dfp-ad.directive';\nimport { DfpRefreshService } from '../service/dfp-refresh.service';\n\n@Directive({\n    selector: 'dfp-ad[responsive]'\n})\nexport class DfpAdResponsiveDirective {\n\n    private iframe: HTMLIFrameElement;\n    private iframeWidth: number;\n    private slot: any;\n\n    constructor(\n        private elementRef: ElementRef,\n        @Inject(forwardRef(() => DfpAdDirective))\n        private ad: DfpAdDirective,\n        private dfpRefresh: DfpRefreshService\n    ) {\n        this.ad.afterRefresh.subscribe(event => {\n            this.slot = event.slot;\n        });\n    }\n\n    @HostListener('window:resize')\n    normalizeIframe() {\n        if (this.ad.isHidden) {\n            return false;\n        }\n        this.iframe = this.iframe || this.getIframe();\n        if (!this.iframe) { return false; }\n\n        this.iframeWidth = this.iframeWidth || +this.iframe.width;\n\n        const winWidth = window.innerWidth;\n\n        let state = this.ad.getState(),\n            width = 0;\n\n        state.sizes.forEach(size => {\n            if (size[0] < winWidth) {\n                width = Math.max(width, size[0]);\n            }\n        });\n\n        if (state.sizes.length > 1 && width !== this.iframeWidth) {\n            state = this.ad.getState();\n            this.iframeWidth = width;\n            this.iframe.setAttribute('width', width + '');\n            this.dfpRefresh.slotRefresh(this.slot, state.refresh).then(slot => {\n                this.ad.afterRefresh.emit({ type: 'resize', slot: slot });\n                this.iframe = this.getIframe();\n            });\n        }\n    }\n\n    getIframe() {\n        const ad: Element = this.elementRef.nativeElement,\n            iframe = ad.querySelector('iframe');\n        if (iframe && +iframe.width > 0) {\n            return iframe;\n        }\n    }\n}\n","import { Directive, Inject, forwardRef, Input, OnInit } from '@angular/core';\n\nimport { DfpAdDirective } from './dfp-ad.directive';\n\n@Directive({\n  selector: 'dfp-responsive'\n})\nexport class DfpResponsiveDirective implements OnInit {\n\n  @Input() viewport = [0, 0];\n  @Input() adSizes = [];\n\n  constructor(\n    @Inject(forwardRef(() => DfpAdDirective))\n    private ad: DfpAdDirective\n  ) { }\n\n  ngOnInit() {\n    this.ad.addResponsiveMapping(this.getState());\n  }\n\n  @Input()\n  set viewWidth(val: number) {\n    if (val > 0) {\n      this.viewport[0] = val;\n    }\n  }\n\n  @Input()\n  set viewHeight(val: number) {\n    if (val > 0) {\n      this.viewport[1] = val;\n    }\n  }\n\n  addSize(size) {\n    this.adSizes.push(size);\n  }\n\n  getState() {\n    return Object.freeze({\n      viewportSize: this.viewport,\n      adSizes: this.adSizes\n    });\n  }\n}\n","import { Directive, ElementRef, Input, Inject, forwardRef, OnInit, Optional } from '@angular/core';\n\nimport { DfpAdDirective } from './dfp-ad.directive';\nimport { DfpResponsiveDirective } from './dfp-responsive.directive';\n\n@Directive({\n  selector: 'dfp-size'\n})\nexport class DfpSizeDirective implements OnInit {\n\n  @Input() width: number;\n  @Input() height: number;\n\n  constructor(\n    private elementRef: ElementRef,\n    @Inject(forwardRef(() => DfpAdDirective))\n    private ad: DfpAdDirective,\n    @Optional() @Inject(forwardRef(() => DfpResponsiveDirective))\n    private resp: DfpResponsiveDirective\n  ) { }\n\n  ngOnInit() {\n    const target = this.resp || this.ad,\n      innerText: string = this.elementRef.nativeElement.innerText;\n\n    if (this.width && this.height) {\n      target.addSize([this.width, this.height]);\n    } else if (innerText.trim() !== '') {\n      target.addSize(innerText);\n    }\n  }\n\n}\n","import { Directive, AfterContentInit, Input, Inject, forwardRef } from '@angular/core';\n\nimport { DFPIncompleteError } from '../class';\nimport { DfpAdDirective } from './dfp-ad.directive';\n\n@Directive({\n  selector: 'dfp-targeting'\n})\nexport class DfpTargetingDirective implements AfterContentInit {\n\n  @Input() key: string;\n\n  @Input()\n  set value(val: string | Array<string>) {\n    if (val instanceof Array) {\n      val.forEach(v => this.addValue(v));\n    } else {\n      this.addValue(val);\n    }\n  }\n\n  private values = [];\n\n  constructor(\n    @Inject(forwardRef(() => DfpAdDirective))\n    private ad: DfpAdDirective\n  ) { }\n\n  ngAfterContentInit() {\n    const targeting = this.getState();\n    this.ad.addTargeting(targeting);\n  }\n\n  checkValid() {\n    if (this.key === undefined) {\n      throw new DFPIncompleteError('dfp-targeting', 'key', true);\n    }\n    if (this.values.length === 0) {\n      throw new DFPIncompleteError('dfp-targeting', 'value', true);\n    }\n  }\n\n  getState() {\n    this.checkValid();\n    return Object.freeze({\n      key: this.key,\n      values: this.values\n    });\n  }\n\n  addValue(value) {\n    if (value && !this.values.find(item => item === value)) {\n      this.values.push(value);\n    }\n  }\n\n}\n","import {\n  Directive, ElementRef,\n  Inject, forwardRef,\n  OnInit\n} from '@angular/core';\n\nimport { DfpAdDirective } from './dfp-ad.directive';\n\n@Directive({\n  selector: 'dfp-exclusion'\n})\nexport class DfpExclusionDirective implements OnInit {\n\n  constructor(\n    private elementRef: ElementRef,\n    @Inject(forwardRef(() => DfpAdDirective))\n    private ad: DfpAdDirective\n  ) {}\n\n  ngOnInit() {\n    this.ad.addExclusion(this.elementRef.nativeElement.innerText);\n  }\n\n}\n","import {\n  Directive, ElementRef,\n  Inject, forwardRef,\n  OnInit\n} from '@angular/core';\n\nimport { DfpTargetingDirective } from './dfp-targeting.directive';\n\n@Directive({\n  selector: 'dfp-value'\n})\nexport class DfpValueDirective implements OnInit {\n\n  constructor(\n    private elementRef: ElementRef,\n    @Inject(forwardRef(() => DfpTargetingDirective))\n    private targeting: DfpTargetingDirective\n  ) { }\n\n  ngOnInit() {\n    this.targeting.addValue(this.elementRef.nativeElement.innerText);\n  }\n\n}\n","import {\n  Directive, ElementRef,\n  Input,\n  OnInit,\n  Inject,\n  PLATFORM_ID\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Directive({\n  selector: 'dfp-audience-pixel'\n})\nexport class DfpAudiencePixelDirective implements OnInit {\n\n  @Input() adUnit: string;\n  @Input() segmentId: number;\n  @Input() ppid: number;\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: Object,\n    private elementRef: ElementRef\n  ) { }\n\n  ngOnInit() {\n    if (isPlatformBrowser(this.platformId)) {\n      const axel = Math.random(),\n        random = axel * 10000000000000;\n\n      let adUnit = '';\n      if (this.adUnit) {\n        adUnit = `dc_iu=${this.adUnit}`;\n      }\n\n      let ppid = '';\n      if (this.ppid) {\n        ppid = `ppid=${this.ppid}`;\n      }\n\n      const pixel = document.createElement('img');\n\n      pixel.src = 'https://pubads.g.doubleclick.net/activity;ord=';\n      pixel.src += `${random};dc_seg=${this.segmentId};${adUnit}${ppid}`;\n\n      pixel.width = 1;\n      pixel.height = 1;\n      pixel.border = '0';\n\n      pixel.style.visibility = 'hidden';\n\n      this.elementRef.nativeElement.append(pixel);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ModuleWithProviders } from '@angular/core';\n\nimport { DfpConfig, } from './class';\nimport { DFP_CONFIG } from './service/injection_token';\n\nimport { IdleService } from './service/idle.service';\nimport { HttpErrorService } from './service/http-error.service';\nimport { ParseDurationService } from './service/parse-duration.service';\nimport { ScriptInjectorService } from './service/script-injector.service';\nimport { DfpService } from './service/dfp.service';\nimport { DfpIDGeneratorService } from './service/dfp-id-generator.service';\nimport { DfpRefreshService } from './service/dfp-refresh.service';\n\nimport { DfpAdDirective } from './directive/dfp-ad.directive';\nimport { DfpSizeDirective } from './directive/dfp-size.directive';\nimport { DfpResponsiveDirective } from './directive/dfp-responsive.directive';\nimport { DfpAdResponsiveDirective } from './directive/dfp-ad-responsive.directive';\nimport { DfpTargetingDirective } from './directive/dfp-targeting.directive';\nimport { DfpExclusionDirective } from './directive/dfp-exclusion.directive';\nimport { DfpValueDirective } from './directive/dfp-value.directive';\nimport { DfpAudiencePixelDirective } from './directive/dfp-audience-pixel.directive';\n\nconst DIRECTIVES = [\n  DfpAdDirective,\n  DfpSizeDirective,\n  DfpResponsiveDirective,\n  DfpAdResponsiveDirective,\n  DfpTargetingDirective, DfpExclusionDirective, DfpValueDirective,\n  DfpAudiencePixelDirective\n];\n\nconst SERVICES = [\n  HttpErrorService,\n  ParseDurationService,\n  ScriptInjectorService,\n  DfpService, DfpIDGeneratorService, DfpRefreshService\n];\n\n@NgModule({\n  imports: [\n\n  ],\n  declarations: [\n    ...DIRECTIVES\n  ],\n  providers: [\n    ...SERVICES\n  ],\n  exports: [\n    ...DIRECTIVES\n  ]\n})\nexport class DfpModule {\n  static forRoot(config?: DfpConfig): ModuleWithProviders {\n    return {\n      ngModule: DfpModule,\n      providers: [\n        ...(config && config.idleLoad === true ? [IdleService] : []),\n        { provide: DFP_CONFIG, useValue: config || {} }\n      ]\n    };\n  }\n}\n"]}